{"version":3,"sources":["..\\script\\dep\\jshash\\sha256.js","..\\script\\global-modules\\sha256.ts"],"names":["hexcase","b64pad","hex_sha256","s","rstr2hex","rstr_sha256","str2rstr_utf8","b64_sha256","rstr2b64","any_sha256","e","rstr2any","hex_hmac_sha256","k","d","rstr_hmac_sha256","b64_hmac_sha256","any_hmac_sha256","sha256_vm_test","toLowerCase","binb2rstr","binb_sha256","rstr2binb","length","key","data","bkey","ipad","Array","opad","i","hash","concat","input","hex_tab","output","x","charCodeAt","charAt","tab","len","triplet","j","encoding","divisor","remainders","q","quotient","dividend","Math","ceil","floor","full_length","log","y","String","fromCharCode","str2rstr_utf16le","str2rstr_utf16be","sha256_S","X","n","sha256_R","sha256_Ch","z","sha256_Maj","sha256_Sigma0256","sha256_Sigma1256","sha256_Gamma0256","sha256_Gamma1256","sha256_Sigma0512","sha256_Sigma1512","sha256_Gamma0512","sha256_Gamma1512","sha256_K","m","l","HASH","W","a","b","c","f","g","h","T1","T2","safe_add","lsw","msw","sha256Hex","sha256Base64","sha256Any","sha256HmacHex","sha256HmacBase64","sha256HmacAny"],"mappings":"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","file":"065b61fc3f052b175ebfad6a6f3e286f.map","sourcesContent":["/*\r\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\r\n * in FIPS 180-2\r\n * Version 2.2 Copyright Angel Marin, Paul Johnston 2000 - 2009.\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for details.\r\n * Also http://anmar.eu.org/projects/jssha2/\r\n */\r\n\r\n/*\r\n * Configurable variables. You may need to tweak these to be compatible with\r\n * the server-side, but the defaults work in most cases.\r\n */\r\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\r\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\r\n\r\n/*\r\n * These are the functions you'll usually want to call\r\n * They take string arguments and return either hex or base-64 encoded strings\r\n */\r\nfunction hex_sha256(s)    { return rstr2hex(rstr_sha256(str2rstr_utf8(s))); }\r\nfunction b64_sha256(s)    { return rstr2b64(rstr_sha256(str2rstr_utf8(s))); }\r\nfunction any_sha256(s, e) { return rstr2any(rstr_sha256(str2rstr_utf8(s)), e); }\r\nfunction hex_hmac_sha256(k, d)\r\n  { return rstr2hex(rstr_hmac_sha256(str2rstr_utf8(k), str2rstr_utf8(d))); }\r\nfunction b64_hmac_sha256(k, d)\r\n  { return rstr2b64(rstr_hmac_sha256(str2rstr_utf8(k), str2rstr_utf8(d))); }\r\nfunction any_hmac_sha256(k, d, e)\r\n  { return rstr2any(rstr_hmac_sha256(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\r\n\r\n/*\r\n * Perform a simple self-test to see if the VM is working\r\n */\r\nfunction sha256_vm_test()\r\n{\r\n  return hex_sha256(\"abc\").toLowerCase() ==\r\n            \"ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad\";\r\n}\r\n\r\n/*\r\n * Calculate the sha256 of a raw string\r\n */\r\nfunction rstr_sha256(s)\r\n{\r\n  return binb2rstr(binb_sha256(rstr2binb(s), s.length * 8));\r\n}\r\n\r\n/*\r\n * Calculate the HMAC-sha256 of a key and some data (raw strings)\r\n */\r\nfunction rstr_hmac_sha256(key, data)\r\n{\r\n  var bkey = rstr2binb(key);\r\n  if(bkey.length > 16) bkey = binb_sha256(bkey, key.length * 8);\r\n\r\n  var ipad = Array(16), opad = Array(16);\r\n  for(var i = 0; i < 16; i++)\r\n  {\r\n    ipad[i] = bkey[i] ^ 0x36363636;\r\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n  }\r\n\r\n  var hash = binb_sha256(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\r\n  return binb2rstr(binb_sha256(opad.concat(hash), 512 + 256));\r\n}\r\n\r\n/*\r\n * Convert a raw string to a hex string\r\n */\r\nfunction rstr2hex(input)\r\n{\r\n  try { hexcase } catch(e) { hexcase=0; }\r\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n  var output = \"\";\r\n  var x;\r\n  for(var i = 0; i < input.length; i++)\r\n  {\r\n    x = input.charCodeAt(i);\r\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\r\n           +  hex_tab.charAt( x        & 0x0F);\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to a base-64 string\r\n */\r\nfunction rstr2b64(input)\r\n{\r\n  try { b64pad } catch(e) { b64pad=''; }\r\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n  var output = \"\";\r\n  var len = input.length;\r\n  for(var i = 0; i < len; i += 3)\r\n  {\r\n    var triplet = (input.charCodeAt(i) << 16)\r\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\r\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\r\n    for(var j = 0; j < 4; j++)\r\n    {\r\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\r\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to an arbitrary string encoding\r\n */\r\nfunction rstr2any(input, encoding)\r\n{\r\n  var divisor = encoding.length;\r\n  var remainders = Array();\r\n  var i, q, x, quotient;\r\n\r\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\r\n  var dividend = Array(Math.ceil(input.length / 2));\r\n  for(i = 0; i < dividend.length; i++)\r\n  {\r\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\r\n  }\r\n\r\n  /*\r\n   * Repeatedly perform a long division. The binary array forms the dividend,\r\n   * the length of the encoding is the divisor. Once computed, the quotient\r\n   * forms the dividend for the next step. We stop when the dividend is zero.\r\n   * All remainders are stored for later use.\r\n   */\r\n  while(dividend.length > 0)\r\n  {\r\n    quotient = Array();\r\n    x = 0;\r\n    for(i = 0; i < dividend.length; i++)\r\n    {\r\n      x = (x << 16) + dividend[i];\r\n      q = Math.floor(x / divisor);\r\n      x -= q * divisor;\r\n      if(quotient.length > 0 || q > 0)\r\n        quotient[quotient.length] = q;\r\n    }\r\n    remainders[remainders.length] = x;\r\n    dividend = quotient;\r\n  }\r\n\r\n  /* Convert the remainders to the output string */\r\n  var output = \"\";\r\n  for(i = remainders.length - 1; i >= 0; i--)\r\n    output += encoding.charAt(remainders[i]);\r\n\r\n  /* Append leading zero equivalents */\r\n  var full_length = Math.ceil(input.length * 8 /\r\n                                    (Math.log(encoding.length) / Math.log(2)))\r\n  for(i = output.length; i < full_length; i++)\r\n    output = encoding[0] + output;\r\n\r\n  return output;\r\n}\r\n\r\n/*\r\n * Encode a string as utf-8.\r\n * For efficiency, this assumes the input is valid utf-16.\r\n */\r\nfunction str2rstr_utf8(input)\r\n{\r\n  var output = \"\";\r\n  var i = -1;\r\n  var x, y;\r\n\r\n  while(++i < input.length)\r\n  {\r\n    /* Decode utf-16 surrogate pairs */\r\n    x = input.charCodeAt(i);\r\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\r\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\r\n    {\r\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\r\n      i++;\r\n    }\r\n\r\n    /* Encode output as utf-8 */\r\n    if(x <= 0x7F)\r\n      output += String.fromCharCode(x);\r\n    else if(x <= 0x7FF)\r\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\r\n                                    0x80 | ( x         & 0x3F));\r\n    else if(x <= 0xFFFF)\r\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\r\n                                    0x80 | ((x >>> 6 ) & 0x3F),\r\n                                    0x80 | ( x         & 0x3F));\r\n    else if(x <= 0x1FFFFF)\r\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\r\n                                    0x80 | ((x >>> 12) & 0x3F),\r\n                                    0x80 | ((x >>> 6 ) & 0x3F),\r\n                                    0x80 | ( x         & 0x3F));\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Encode a string as utf-16\r\n */\r\nfunction str2rstr_utf16le(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length; i++)\r\n    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\r\n                                  (input.charCodeAt(i) >>> 8) & 0xFF);\r\n  return output;\r\n}\r\n\r\nfunction str2rstr_utf16be(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length; i++)\r\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\r\n                                   input.charCodeAt(i)        & 0xFF);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to an array of big-endian words\r\n * Characters >255 have their high-byte silently ignored.\r\n */\r\nfunction rstr2binb(input)\r\n{\r\n  var output = Array(input.length >> 2);\r\n  for(var i = 0; i < output.length; i++)\r\n    output[i] = 0;\r\n  for(var i = 0; i < input.length * 8; i += 8)\r\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert an array of big-endian words to a string\r\n */\r\nfunction binb2rstr(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length * 32; i += 8)\r\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Main sha256 function, with its support functions\r\n */\r\nfunction sha256_S (X, n) {return ( X >>> n ) | (X << (32 - n));}\r\nfunction sha256_R (X, n) {return ( X >>> n );}\r\nfunction sha256_Ch(x, y, z) {return ((x & y) ^ ((~x) & z));}\r\nfunction sha256_Maj(x, y, z) {return ((x & y) ^ (x & z) ^ (y & z));}\r\nfunction sha256_Sigma0256(x) {return (sha256_S(x, 2) ^ sha256_S(x, 13) ^ sha256_S(x, 22));}\r\nfunction sha256_Sigma1256(x) {return (sha256_S(x, 6) ^ sha256_S(x, 11) ^ sha256_S(x, 25));}\r\nfunction sha256_Gamma0256(x) {return (sha256_S(x, 7) ^ sha256_S(x, 18) ^ sha256_R(x, 3));}\r\nfunction sha256_Gamma1256(x) {return (sha256_S(x, 17) ^ sha256_S(x, 19) ^ sha256_R(x, 10));}\r\nfunction sha256_Sigma0512(x) {return (sha256_S(x, 28) ^ sha256_S(x, 34) ^ sha256_S(x, 39));}\r\nfunction sha256_Sigma1512(x) {return (sha256_S(x, 14) ^ sha256_S(x, 18) ^ sha256_S(x, 41));}\r\nfunction sha256_Gamma0512(x) {return (sha256_S(x, 1)  ^ sha256_S(x, 8) ^ sha256_R(x, 7));}\r\nfunction sha256_Gamma1512(x) {return (sha256_S(x, 19) ^ sha256_S(x, 61) ^ sha256_R(x, 6));}\r\n\r\nvar sha256_K = new Array\r\n(\r\n  1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993,\r\n  -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987,\r\n  1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522,\r\n  264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986,\r\n  -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585,\r\n  113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,\r\n  1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885,\r\n  -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344,\r\n  430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,\r\n  1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872,\r\n  -1866530822, -1538233109, -1090935817, -965641998\r\n);\r\n\r\nfunction binb_sha256(m, l)\r\n{\r\n  var HASH = new Array(1779033703, -1150833019, 1013904242, -1521486534,\r\n                       1359893119, -1694144372, 528734635, 1541459225);\r\n  var W = new Array(64);\r\n  var a, b, c, d, e, f, g, h;\r\n  var i, j, T1, T2;\r\n\r\n  /* append padding */\r\n  m[l >> 5] |= 0x80 << (24 - l % 32);\r\n  m[((l + 64 >> 9) << 4) + 15] = l;\r\n\r\n  for(i = 0; i < m.length; i += 16)\r\n  {\r\n    a = HASH[0];\r\n    b = HASH[1];\r\n    c = HASH[2];\r\n    d = HASH[3];\r\n    e = HASH[4];\r\n    f = HASH[5];\r\n    g = HASH[6];\r\n    h = HASH[7];\r\n\r\n    for(j = 0; j < 64; j++)\r\n    {\r\n      if (j < 16) W[j] = m[j + i];\r\n      else W[j] = safe_add(safe_add(safe_add(sha256_Gamma1256(W[j - 2]), W[j - 7]),\r\n                                            sha256_Gamma0256(W[j - 15])), W[j - 16]);\r\n\r\n      T1 = safe_add(safe_add(safe_add(safe_add(h, sha256_Sigma1256(e)), sha256_Ch(e, f, g)),\r\n                                                          sha256_K[j]), W[j]);\r\n      T2 = safe_add(sha256_Sigma0256(a), sha256_Maj(a, b, c));\r\n      h = g;\r\n      g = f;\r\n      f = e;\r\n      e = safe_add(d, T1);\r\n      d = c;\r\n      c = b;\r\n      b = a;\r\n      a = safe_add(T1, T2);\r\n    }\r\n\r\n    HASH[0] = safe_add(a, HASH[0]);\r\n    HASH[1] = safe_add(b, HASH[1]);\r\n    HASH[2] = safe_add(c, HASH[2]);\r\n    HASH[3] = safe_add(d, HASH[3]);\r\n    HASH[4] = safe_add(e, HASH[4]);\r\n    HASH[5] = safe_add(f, HASH[5]);\r\n    HASH[6] = safe_add(g, HASH[6]);\r\n    HASH[7] = safe_add(h, HASH[7]);\r\n  }\r\n  return HASH;\r\n}\r\n\r\nfunction safe_add (x, y)\r\n{\r\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n  return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n\r\n\r\nexport const sha256Hex = hex_sha256;\r\nexport const sha256Base64 = b64_sha256;\r\nexport const sha256Any = any_sha256;\r\nexport const sha256HmacHex = hex_hmac_sha256;\r\nexport const sha256HmacBase64 = b64_hmac_sha256;\r\nexport const sha256HmacAny = any_hmac_sha256;\r\n","/**\n * YJC <https://github.com/yangjc> @2018-03-23\n */\n\n'use strict';\n\nimport { sha256Hex } from '../dep/jshash/sha256';\n\nwindow.globalModules.sha256 = {\n    sha256Hex: sha256Hex,\n};\n"]}