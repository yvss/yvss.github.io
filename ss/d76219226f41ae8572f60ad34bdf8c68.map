{"version":3,"sources":["..\\script\\dep\\jshash\\sha512.js","..\\script\\global-modules\\sha512.ts"],"names":["hexcase","b64pad","hex_sha512","s","rstr2hex","rstr_sha512","str2rstr_utf8","b64_sha512","rstr2b64","any_sha512","e","rstr2any","hex_hmac_sha512","k","d","rstr_hmac_sha512","b64_hmac_sha512","any_hmac_sha512","sha512_vm_test","toLowerCase","binb2rstr","binb_sha512","rstr2binb","length","key","data","bkey","ipad","Array","opad","i","hash","concat","input","hex_tab","output","x","charCodeAt","charAt","tab","len","triplet","j","encoding","divisor","q","quotient","dividend","Math","ceil","full_length","log","remainders","floor","y","String","fromCharCode","str2rstr_utf16le","str2rstr_utf16be","sha512_k","undefined","int64","H","T1","T2","a","b","c","f","g","h","s0","s1","Ch","Maj","r1","r2","r3","W","int64copy","l","int64rrot","int64revrrot","int64shr","int64add4","int64add5","int64add","dst","src","shift","w0","w1","w2","w3","sha512Hex","sha512Base64","sha512Any","sha512HmacHex","sha512HmacBase64","sha512HmacAny"],"mappings":"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","file":"d76219226f41ae8572f60ad34bdf8c68.map","sourcesContent":["/*\r\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-512, as defined\r\n * in FIPS 180-2\r\n * Version 2.2 Copyright Anonymous Contributor, Paul Johnston 2000 - 2009.\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for details.\r\n */\r\n\r\n/*\r\n * Configurable variables. You may need to tweak these to be compatible with\r\n * the server-side, but the defaults work in most cases.\r\n */\r\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\r\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\r\n\r\n/*\r\n * These are the functions you'll usually want to call\r\n * They take string arguments and return either hex or base-64 encoded strings\r\n */\r\nfunction hex_sha512(s)    { return rstr2hex(rstr_sha512(str2rstr_utf8(s))); }\r\nfunction b64_sha512(s)    { return rstr2b64(rstr_sha512(str2rstr_utf8(s))); }\r\nfunction any_sha512(s, e) { return rstr2any(rstr_sha512(str2rstr_utf8(s)), e);}\r\nfunction hex_hmac_sha512(k, d)\r\n  { return rstr2hex(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d))); }\r\nfunction b64_hmac_sha512(k, d)\r\n  { return rstr2b64(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d))); }\r\nfunction any_hmac_sha512(k, d, e)\r\n  { return rstr2any(rstr_hmac_sha512(str2rstr_utf8(k), str2rstr_utf8(d)), e);}\r\n\r\n/*\r\n * Perform a simple self-test to see if the VM is working\r\n */\r\nfunction sha512_vm_test()\r\n{\r\n  return hex_sha512(\"abc\").toLowerCase() ==\r\n    \"ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a\" +\r\n    \"2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f\";\r\n}\r\n\r\n/*\r\n * Calculate the SHA-512 of a raw string\r\n */\r\nfunction rstr_sha512(s)\r\n{\r\n  return binb2rstr(binb_sha512(rstr2binb(s), s.length * 8));\r\n}\r\n\r\n/*\r\n * Calculate the HMAC-SHA-512 of a key and some data (raw strings)\r\n */\r\nfunction rstr_hmac_sha512(key, data)\r\n{\r\n  var bkey = rstr2binb(key);\r\n  if(bkey.length > 32) bkey = binb_sha512(bkey, key.length * 8);\r\n\r\n  var ipad = Array(32), opad = Array(32);\r\n  for(var i = 0; i < 32; i++)\r\n  {\r\n    ipad[i] = bkey[i] ^ 0x36363636;\r\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n  }\r\n\r\n  var hash = binb_sha512(ipad.concat(rstr2binb(data)), 1024 + data.length * 8);\r\n  return binb2rstr(binb_sha512(opad.concat(hash), 1024 + 512));\r\n}\r\n\r\n/*\r\n * Convert a raw string to a hex string\r\n */\r\nfunction rstr2hex(input)\r\n{\r\n  try { hexcase } catch(e) { hexcase=0; }\r\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n  var output = \"\";\r\n  var x;\r\n  for(var i = 0; i < input.length; i++)\r\n  {\r\n    x = input.charCodeAt(i);\r\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\r\n           +  hex_tab.charAt( x        & 0x0F);\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to a base-64 string\r\n */\r\nfunction rstr2b64(input)\r\n{\r\n  try { b64pad } catch(e) { b64pad=''; }\r\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n  var output = \"\";\r\n  var len = input.length;\r\n  for(var i = 0; i < len; i += 3)\r\n  {\r\n    var triplet = (input.charCodeAt(i) << 16)\r\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\r\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\r\n    for(var j = 0; j < 4; j++)\r\n    {\r\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\r\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to an arbitrary string encoding\r\n */\r\nfunction rstr2any(input, encoding)\r\n{\r\n  var divisor = encoding.length;\r\n  var i, j, q, x, quotient;\r\n\r\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\r\n  var dividend = Array(Math.ceil(input.length / 2));\r\n  for(i = 0; i < dividend.length; i++)\r\n  {\r\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\r\n  }\r\n\r\n  /*\r\n   * Repeatedly perform a long division. The binary array forms the dividend,\r\n   * the length of the encoding is the divisor. Once computed, the quotient\r\n   * forms the dividend for the next step. All remainders are stored for later\r\n   * use.\r\n   */\r\n  var full_length = Math.ceil(input.length * 8 /\r\n                                    (Math.log(encoding.length) / Math.log(2)));\r\n  var remainders = Array(full_length);\r\n  for(j = 0; j < full_length; j++)\r\n  {\r\n    quotient = Array();\r\n    x = 0;\r\n    for(i = 0; i < dividend.length; i++)\r\n    {\r\n      x = (x << 16) + dividend[i];\r\n      q = Math.floor(x / divisor);\r\n      x -= q * divisor;\r\n      if(quotient.length > 0 || q > 0)\r\n        quotient[quotient.length] = q;\r\n    }\r\n    remainders[j] = x;\r\n    dividend = quotient;\r\n  }\r\n\r\n  /* Convert the remainders to the output string */\r\n  var output = \"\";\r\n  for(i = remainders.length - 1; i >= 0; i--)\r\n    output += encoding.charAt(remainders[i]);\r\n\r\n  return output;\r\n}\r\n\r\n/*\r\n * Encode a string as utf-8.\r\n * For efficiency, this assumes the input is valid utf-16.\r\n */\r\nfunction str2rstr_utf8(input)\r\n{\r\n  var output = \"\";\r\n  var i = -1;\r\n  var x, y;\r\n\r\n  while(++i < input.length)\r\n  {\r\n    /* Decode utf-16 surrogate pairs */\r\n    x = input.charCodeAt(i);\r\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\r\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\r\n    {\r\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\r\n      i++;\r\n    }\r\n\r\n    /* Encode output as utf-8 */\r\n    if(x <= 0x7F)\r\n      output += String.fromCharCode(x);\r\n    else if(x <= 0x7FF)\r\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\r\n                                    0x80 | ( x         & 0x3F));\r\n    else if(x <= 0xFFFF)\r\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\r\n                                    0x80 | ((x >>> 6 ) & 0x3F),\r\n                                    0x80 | ( x         & 0x3F));\r\n    else if(x <= 0x1FFFFF)\r\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\r\n                                    0x80 | ((x >>> 12) & 0x3F),\r\n                                    0x80 | ((x >>> 6 ) & 0x3F),\r\n                                    0x80 | ( x         & 0x3F));\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Encode a string as utf-16\r\n */\r\nfunction str2rstr_utf16le(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length; i++)\r\n    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\r\n                                  (input.charCodeAt(i) >>> 8) & 0xFF);\r\n  return output;\r\n}\r\n\r\nfunction str2rstr_utf16be(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length; i++)\r\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\r\n                                   input.charCodeAt(i)        & 0xFF);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to an array of big-endian words\r\n * Characters >255 have their high-byte silently ignored.\r\n */\r\nfunction rstr2binb(input)\r\n{\r\n  var output = Array(input.length >> 2);\r\n  for(var i = 0; i < output.length; i++)\r\n    output[i] = 0;\r\n  for(var i = 0; i < input.length * 8; i += 8)\r\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert an array of big-endian words to a string\r\n */\r\nfunction binb2rstr(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length * 32; i += 8)\r\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Calculate the SHA-512 of an array of big-endian dwords, and a bit length\r\n */\r\nvar sha512_k;\r\nfunction binb_sha512(x, len)\r\n{\r\n  if(sha512_k == undefined)\r\n  {\r\n    //SHA512 constants\r\n    sha512_k = new Array(\r\nnew int64(0x428a2f98, -685199838), new int64(0x71374491, 0x23ef65cd),\r\nnew int64(-1245643825, -330482897), new int64(-373957723, -2121671748),\r\nnew int64(0x3956c25b, -213338824), new int64(0x59f111f1, -1241133031),\r\nnew int64(-1841331548, -1357295717), new int64(-1424204075, -630357736),\r\nnew int64(-670586216, -1560083902), new int64(0x12835b01, 0x45706fbe),\r\nnew int64(0x243185be, 0x4ee4b28c), new int64(0x550c7dc3, -704662302),\r\nnew int64(0x72be5d74, -226784913), new int64(-2132889090, 0x3b1696b1),\r\nnew int64(-1680079193, 0x25c71235), new int64(-1046744716, -815192428),\r\nnew int64(-459576895, -1628353838), new int64(-272742522, 0x384f25e3),\r\nnew int64(0xfc19dc6, -1953704523), new int64(0x240ca1cc, 0x77ac9c65),\r\nnew int64(0x2de92c6f, 0x592b0275), new int64(0x4a7484aa, 0x6ea6e483),\r\nnew int64(0x5cb0a9dc, -1119749164), new int64(0x76f988da, -2096016459),\r\nnew int64(-1740746414, -295247957), new int64(-1473132947, 0x2db43210),\r\nnew int64(-1341970488, -1728372417), new int64(-1084653625, -1091629340),\r\nnew int64(-958395405, 0x3da88fc2), new int64(-710438585, -1828018395),\r\nnew int64(0x6ca6351, -536640913), new int64(0x14292967, 0xa0e6e70),\r\nnew int64(0x27b70a85, 0x46d22ffc), new int64(0x2e1b2138, 0x5c26c926),\r\nnew int64(0x4d2c6dfc, 0x5ac42aed), new int64(0x53380d13, -1651133473),\r\nnew int64(0x650a7354, -1951439906), new int64(0x766a0abb, 0x3c77b2a8),\r\nnew int64(-2117940946, 0x47edaee6), new int64(-1838011259, 0x1482353b),\r\nnew int64(-1564481375, 0x4cf10364), new int64(-1474664885, -1136513023),\r\nnew int64(-1035236496, -789014639), new int64(-949202525, 0x654be30),\r\nnew int64(-778901479, -688958952), new int64(-694614492, 0x5565a910),\r\nnew int64(-200395387, 0x5771202a), new int64(0x106aa070, 0x32bbd1b8),\r\nnew int64(0x19a4c116, -1194143544), new int64(0x1e376c08, 0x5141ab53),\r\nnew int64(0x2748774c, -544281703), new int64(0x34b0bcb5, -509917016),\r\nnew int64(0x391c0cb3, -976659869), new int64(0x4ed8aa4a, -482243893),\r\nnew int64(0x5b9cca4f, 0x7763e373), new int64(0x682e6ff3, -692930397),\r\nnew int64(0x748f82ee, 0x5defb2fc), new int64(0x78a5636f, 0x43172f60),\r\nnew int64(-2067236844, -1578062990), new int64(-1933114872, 0x1a6439ec),\r\nnew int64(-1866530822, 0x23631e28), new int64(-1538233109, -561857047),\r\nnew int64(-1090935817, -1295615723), new int64(-965641998, -479046869),\r\nnew int64(-903397682, -366583396), new int64(-779700025, 0x21c0c207),\r\nnew int64(-354779690, -840897762), new int64(-176337025, -294727304),\r\nnew int64(0x6f067aa, 0x72176fba), new int64(0xa637dc5, -1563912026),\r\nnew int64(0x113f9804, -1090974290), new int64(0x1b710b35, 0x131c471b),\r\nnew int64(0x28db77f5, 0x23047d84), new int64(0x32caab7b, 0x40c72493),\r\nnew int64(0x3c9ebe0a, 0x15c9bebc), new int64(0x431d67c4, -1676669620),\r\nnew int64(0x4cc5d4be, -885112138), new int64(0x597f299c, -60457430),\r\nnew int64(0x5fcb6fab, 0x3ad6faec), new int64(0x6c44198c, 0x4a475817));\r\n  }\r\n\r\n  //Initial hash values\r\n  var H = new Array(\r\nnew int64(0x6a09e667, -205731576),\r\nnew int64(-1150833019, -2067093701),\r\nnew int64(0x3c6ef372, -23791573),\r\nnew int64(-1521486534, 0x5f1d36f1),\r\nnew int64(0x510e527f, -1377402159),\r\nnew int64(-1694144372, 0x2b3e6c1f),\r\nnew int64(0x1f83d9ab, -79577749),\r\nnew int64(0x5be0cd19, 0x137e2179));\r\n\r\n  var T1 = new int64(0, 0),\r\n    T2 = new int64(0, 0),\r\n    a = new int64(0,0),\r\n    b = new int64(0,0),\r\n    c = new int64(0,0),\r\n    d = new int64(0,0),\r\n    e = new int64(0,0),\r\n    f = new int64(0,0),\r\n    g = new int64(0,0),\r\n    h = new int64(0,0),\r\n    //Temporary variables not specified by the document\r\n    s0 = new int64(0, 0),\r\n    s1 = new int64(0, 0),\r\n    Ch = new int64(0, 0),\r\n    Maj = new int64(0, 0),\r\n    r1 = new int64(0, 0),\r\n    r2 = new int64(0, 0),\r\n    r3 = new int64(0, 0);\r\n  var j, i;\r\n  var W = new Array(80);\r\n  for(i=0; i<80; i++)\r\n    W[i] = new int64(0, 0);\r\n\r\n  // append padding to the source string. The format is described in the FIPS.\r\n  x[len >> 5] |= 0x80 << (24 - (len & 0x1f));\r\n  x[((len + 128 >> 10)<< 5) + 31] = len;\r\n\r\n  for(i = 0; i<x.length; i+=32) //32 dwords is the block size\r\n  {\r\n    int64copy(a, H[0]);\r\n    int64copy(b, H[1]);\r\n    int64copy(c, H[2]);\r\n    int64copy(d, H[3]);\r\n    int64copy(e, H[4]);\r\n    int64copy(f, H[5]);\r\n    int64copy(g, H[6]);\r\n    int64copy(h, H[7]);\r\n\r\n    for(j=0; j<16; j++)\r\n    {\r\n        W[j].h = x[i + 2*j];\r\n        W[j].l = x[i + 2*j + 1];\r\n    }\r\n\r\n    for(j=16; j<80; j++)\r\n    {\r\n      //sigma1\r\n      int64rrot(r1, W[j-2], 19);\r\n      int64revrrot(r2, W[j-2], 29);\r\n      int64shr(r3, W[j-2], 6);\r\n      s1.l = r1.l ^ r2.l ^ r3.l;\r\n      s1.h = r1.h ^ r2.h ^ r3.h;\r\n      //sigma0\r\n      int64rrot(r1, W[j-15], 1);\r\n      int64rrot(r2, W[j-15], 8);\r\n      int64shr(r3, W[j-15], 7);\r\n      s0.l = r1.l ^ r2.l ^ r3.l;\r\n      s0.h = r1.h ^ r2.h ^ r3.h;\r\n\r\n      int64add4(W[j], s1, W[j-7], s0, W[j-16]);\r\n    }\r\n\r\n    for(j = 0; j < 80; j++)\r\n    {\r\n      //Ch\r\n      Ch.l = (e.l & f.l) ^ (~e.l & g.l);\r\n      Ch.h = (e.h & f.h) ^ (~e.h & g.h);\r\n\r\n      //Sigma1\r\n      int64rrot(r1, e, 14);\r\n      int64rrot(r2, e, 18);\r\n      int64revrrot(r3, e, 9);\r\n      s1.l = r1.l ^ r2.l ^ r3.l;\r\n      s1.h = r1.h ^ r2.h ^ r3.h;\r\n\r\n      //Sigma0\r\n      int64rrot(r1, a, 28);\r\n      int64revrrot(r2, a, 2);\r\n      int64revrrot(r3, a, 7);\r\n      s0.l = r1.l ^ r2.l ^ r3.l;\r\n      s0.h = r1.h ^ r2.h ^ r3.h;\r\n\r\n      //Maj\r\n      Maj.l = (a.l & b.l) ^ (a.l & c.l) ^ (b.l & c.l);\r\n      Maj.h = (a.h & b.h) ^ (a.h & c.h) ^ (b.h & c.h);\r\n\r\n      int64add5(T1, h, s1, Ch, sha512_k[j], W[j]);\r\n      int64add(T2, s0, Maj);\r\n\r\n      int64copy(h, g);\r\n      int64copy(g, f);\r\n      int64copy(f, e);\r\n      int64add(e, d, T1);\r\n      int64copy(d, c);\r\n      int64copy(c, b);\r\n      int64copy(b, a);\r\n      int64add(a, T1, T2);\r\n    }\r\n    int64add(H[0], H[0], a);\r\n    int64add(H[1], H[1], b);\r\n    int64add(H[2], H[2], c);\r\n    int64add(H[3], H[3], d);\r\n    int64add(H[4], H[4], e);\r\n    int64add(H[5], H[5], f);\r\n    int64add(H[6], H[6], g);\r\n    int64add(H[7], H[7], h);\r\n  }\r\n\r\n  //represent the hash as an array of 32-bit dwords\r\n  var hash = new Array(16);\r\n  for(i=0; i<8; i++)\r\n  {\r\n    hash[2*i] = H[i].h;\r\n    hash[2*i + 1] = H[i].l;\r\n  }\r\n  return hash;\r\n}\r\n\r\n//A constructor for 64-bit numbers\r\nfunction int64(h, l)\r\n{\r\n  this.h = h;\r\n  this.l = l;\r\n  //this.toString = int64toString;\r\n}\r\n\r\n//Copies src into dst, assuming both are 64-bit numbers\r\nfunction int64copy(dst, src)\r\n{\r\n  dst.h = src.h;\r\n  dst.l = src.l;\r\n}\r\n\r\n//Right-rotates a 64-bit number by shift\r\n//Won't handle cases of shift>=32\r\n//The function revrrot() is for that\r\nfunction int64rrot(dst, x, shift)\r\n{\r\n    dst.l = (x.l >>> shift) | (x.h << (32-shift));\r\n    dst.h = (x.h >>> shift) | (x.l << (32-shift));\r\n}\r\n\r\n//Reverses the dwords of the source and then rotates right by shift.\r\n//This is equivalent to rotation by 32+shift\r\nfunction int64revrrot(dst, x, shift)\r\n{\r\n    dst.l = (x.h >>> shift) | (x.l << (32-shift));\r\n    dst.h = (x.l >>> shift) | (x.h << (32-shift));\r\n}\r\n\r\n//Bitwise-shifts right a 64-bit number by shift\r\n//Won't handle shift>=32, but it's never needed in SHA512\r\nfunction int64shr(dst, x, shift)\r\n{\r\n    dst.l = (x.l >>> shift) | (x.h << (32-shift));\r\n    dst.h = (x.h >>> shift);\r\n}\r\n\r\n//Adds two 64-bit numbers\r\n//Like the original implementation, does not rely on 32-bit operations\r\nfunction int64add(dst, x, y)\r\n{\r\n   var w0 = (x.l & 0xffff) + (y.l & 0xffff);\r\n   var w1 = (x.l >>> 16) + (y.l >>> 16) + (w0 >>> 16);\r\n   var w2 = (x.h & 0xffff) + (y.h & 0xffff) + (w1 >>> 16);\r\n   var w3 = (x.h >>> 16) + (y.h >>> 16) + (w2 >>> 16);\r\n   dst.l = (w0 & 0xffff) | (w1 << 16);\r\n   dst.h = (w2 & 0xffff) | (w3 << 16);\r\n}\r\n\r\n//Same, except with 4 addends. Works faster than adding them one by one.\r\nfunction int64add4(dst, a, b, c, d)\r\n{\r\n   var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff);\r\n   var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (w0 >>> 16);\r\n   var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (w1 >>> 16);\r\n   var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (w2 >>> 16);\r\n   dst.l = (w0 & 0xffff) | (w1 << 16);\r\n   dst.h = (w2 & 0xffff) | (w3 << 16);\r\n}\r\n\r\n//Same, except with 5 addends\r\nfunction int64add5(dst, a, b, c, d, e)\r\n{\r\n   var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff) + (e.l & 0xffff);\r\n   var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (e.l >>> 16) + (w0 >>> 16);\r\n   var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (e.h & 0xffff) + (w1 >>> 16);\r\n   var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (e.h >>> 16) + (w2 >>> 16);\r\n   dst.l = (w0 & 0xffff) | (w1 << 16);\r\n   dst.h = (w2 & 0xffff) | (w3 << 16);\r\n}\r\n\r\n\r\nexport const sha512Hex = hex_sha512;\r\nexport const sha512Base64 = b64_sha512;\r\nexport const sha512Any = any_sha512;\r\nexport const sha512HmacHex = hex_hmac_sha512;\r\nexport const sha512HmacBase64 = b64_hmac_sha512;\r\nexport const sha512HmacAny = any_hmac_sha512;\r\n","/**\n * YJC <https://github.com/yangjc> @2018-03-23\n */\n\n'use strict';\n\nimport { sha512Hex } from '../dep/jshash/sha512';\n\nwindow.globalModules.sha512 = {\n    sha512Hex: sha512Hex,\n};\n"]}